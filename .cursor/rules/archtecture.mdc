---
description: 全体のアーキテクチャ
globs: lib/**/*.dart
---

# アーキテクチャ

## コーディング規約

- コーディング規約は[style_guide.mdc](mdc:.cursor/rules/style_guide.mdc)に従います。

## エントリポイント

- [main.dart](mdc:lib/main.dart)がエントリポイントです。
- 


## アーキテクチャ設計

### 設計原則
- クリーンアーキテクチャの原則に従う
- 依存性逆転の原則を適用
- 単一責任の原則を遵守
- 関心の分離を徹底

## フィーチャー開発

### プロジェクト構造
```
lib/
  ├── core/          # 共通ユーティリティと定数
  │   ├── constants/
  │   ├── theme/
  │   ├── utils/
  │   └── widgets/
  ├── features/      # 機能モジュール
  │   └── feature_name/
  │       ├── data/          # データ層
  │       │   ├── datasources/
  │       │   ├── models/
  │       │   └── repositories/
  │       ├── domain/        # ドメイン層
  │       │   ├── entities/
  │       │   ├── repositories/
  │       │   └── usecases/
  │       └── presentation/  # プレゼンテーション層
  │           ├── screens/
  │           └── widgets/
  ├── l10n/          # 多言語対応
  └── main.dart
```

### レイヤー構造
#### プレゼンテーション層
- UIロジックのみを含む
- ビジネスロジックは含まない
- 状態管理はRiverpodを使用

#### ドメイン層
- ビジネスロジックを定義
- ユースケースを実装
- エンティティを定義

#### データ層
- データソースの抽象化
- リポジトリの実装
- モデルの定義